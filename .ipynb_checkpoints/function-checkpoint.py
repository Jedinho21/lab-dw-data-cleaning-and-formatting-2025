{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b5fa5e29",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Function to make the DataFrame's column names lowercase and replace spaces with underscores\n",
    "def lower_case(df):\n",
    "   \n",
    "    df.columns = df.columns.str.lower().str.replace(\" \", \"_\")\n",
    "    return df\n",
    "\n",
    "# Function to rename column 'st' to 'state'\n",
    "def change_column(df):\n",
    "    df.rename(columns={\"st\": \"state\"}, inplace=True)\n",
    "    return df\n",
    "\n",
    "# Function to normalize gender representations\n",
    "def gender_column(df):\n",
    "    \n",
    "    df[\"gender\"] = df[\"gender\"].replace([\"female\", \"Female\", \"Femal\"], \"F\").replace(\"Male\", \"M\")\n",
    "    return df\n",
    "\n",
    "# Function to map abbreviated state names to full names\n",
    "def state_func(df):\n",
    " \n",
    "    states = {\"cali\": \"california\", \"AZ\": \"Arizona\", \"WA\": \"Washington\"}\n",
    "    df[\"state\"] = df[\"state\"].replace(states)\n",
    "    return df\n",
    "\n",
    "# Function to standardize education terms\n",
    "def bachelor_change(df):\n",
    "    \n",
    "    df[\"education\"] = df[\"education\"].replace(\"Bachelors\", \"Bachelor\")\n",
    "    return df\n",
    "\n",
    "# Function to remove % characters from 'customer_lifetime_value'\n",
    "def customer_lifetime(df):\n",
    "   \n",
    "    df['customer_lifetime_value'] = df['customer_lifetime_value'].str.replace('%', '')\n",
    "    return df\n",
    "\n",
    "# Function to convert 'customer_lifetime_value' to a float type\n",
    "def changercustomer_value(df):\n",
    "   \n",
    "    df['customer_lifetime_value'] = df['customer_lifetime_value'].apply(float)\n",
    "    return df\n",
    "\n",
    "# Function to simplify vehicle class names\n",
    "def change_car_types(df):\n",
    "   \n",
    "    df[\"vehicle_class\"] = df[\"vehicle_class\"].replace([\"Sports Car\", \"Luxury SUV\", \"Luxury Car\"], \"Luxury\")\n",
    "    return df\n",
    "\n",
    "# Convert 'number_of_open_complaints' to numeric\n",
    "def change_column_tonumeric(df):\n",
    "\n",
    "    df[\"number_of_open_complaints\"] = pd.to_numeric(df[\"number_of_open_complaints\"], errors=\"coerce\")\n",
    "    return df\n",
    "\n",
    "# Fill NaNs in 'number_of_open_complaints' with zero\n",
    "def filling_nas(df):\n",
    "  \n",
    "    df[\"number_of_open_complaints\"].fillna(0, inplace=True)\n",
    "    return df\n",
    "\n",
    "# Function to remove duplicates\n",
    "def drop_dupplicates(df):\n",
    "\n",
    "    df.drop_duplicates(inplace=True)\n",
    "    return df\n",
    "\n",
    "def reset(df):\n",
    "    df.reset_index(drop=True,inplace=True)\n",
    "    return df\n",
    "\n",
    "# Main function to run all cleaning functions\n",
    "def main_cleaning(df):\n",
    "    df = lower_case(df)\n",
    "    df = change_column(df)\n",
    "    df = gender_column(df)\n",
    "    df = state_func(df)\n",
    "    df = bachelor_change(df)\n",
    "    df = customer_lifetime(df)\n",
    "    df = changercustomer_value(df)\n",
    "    df = change_car_types(df)\n",
    "    df = change_column_tonumeric(df)\n",
    "    df = filling_nas(df)\n",
    "    df = drop_dupplicates(df)\n",
    "    df=reset(df)\n",
    "    return df   "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
